---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
import { getRepositoryCommits } from '../utils/githubApi';
import { getCollection } from 'astro:content';
import PostCard  from '../components/PostCard.astro';
import type { CollectionEntry } from 'astro:content';

type post = CollectionEntry<'blog'>;

const page = 1
const startIndex = (page - 1) * 10;
const endIndex = startIndex + 10;
const posts = (await getCollection('blog'))
	.sort((a, b) => parseInt(a.data.number) - parseInt(b.data.number))
	.slice(startIndex, endIndex)

const owner = "viriatonova"
const repor =  "poc_fastapi"
const token = process.env.TOKEN
// const data: any = await getRepositoryCommits(owner, repor, token)
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body>
		<div class="w-full h-full">
			<Header title={SITE_TITLE} />
			<main class="pagination flex justify-start items-start mt-20">
				<section class="w-full flex justify-end">
					<ul 
						class="w-full list-none grid grid-flow-row grid-cols-4 gap-6"
					>
						<li class="w-full h-full col-span-2">

						</li>
						{
							posts.map((post) => (
								<PostCard post={post}/>
							))
						}
					</ul>
				</section>
			</main>
			<Footer />
		</div>
	</body>
</html>
